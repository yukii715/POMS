package com.owsb.poms.ui.admin.Dashboard;

import com.owsb.poms.system.model.*;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.SwingConstants;
import javax.swing.table.*;

public class ReportViewer extends javax.swing.JDialog {
    private List<Report> reportList;
    private DefaultTableModel reportModel = new DefaultTableModel(){
       public boolean isCellEditable(int row, int column){
           return false;
       } 
    } ;
    private String[] reportColumnName = {"ID", "Type", "Date", "Time", "Message"};

    public ReportViewer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setTitle("Report");
        
        for (Report.type type : Report.type.values()){
            cmbReport.addItem(type.name());
        }
        
        Report();
    }
    
    private void Report(){
        reportModel.setRowCount(0);
        
        reportModel.setColumnIdentifiers(reportColumnName);
        JTableHeader header = tblReport.getTableHeader();
        header.setBackground(new java.awt.Color(255, 255, 204));
        
        srlReport.getViewport().setBackground(new java.awt.Color(255, 255, 204));
        
        tblReport.getColumnModel().getColumn(4).setPreferredWidth(150);
        
        reportList = Report.toList();
        
        for (Report re : reportList) {
            if (cmbReport.getSelectedItem().equals("All")){
                reportModel.addRow(new String[]{
                    re.getReportID(),
                    re.getReportType().name(),
                    re.getDateTime().format(DateTimeFormatter.ofPattern("dd MMMM yyyy")),
                    re.getDateTime().format(DateTimeFormatter.ofPattern("hh:mm:ss a")),
                    re.getMessage()
                });
            }
            else{
                if (cmbReport.getSelectedItem().equals(re.getReportType().name())){
                    reportModel.addRow(new String[]{
                        re.getReportID(),
                        re.getReportType().name(),
                        re.getDateTime().format(DateTimeFormatter.ofPattern("dd MMMM yyyy")),
                        re.getDateTime().format(DateTimeFormatter.ofPattern("hh:mm:ss a")),
                        re.getMessage()
                    });
                }
            }
        }
        
        // Create a single “center” renderer:
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        // Apply it as the default for any Object‐typed cell:
        tblReport.setDefaultRenderer(Object.class, centerRenderer);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        srlReport = new javax.swing.JScrollPane();
        tblReport = new javax.swing.JTable();
        cmbReport = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(255, 204, 204));

        tblReport.setBackground(new java.awt.Color(255, 255, 204));
        tblReport.setModel(reportModel);
        tblReport.setGridColor(java.awt.Color.gray);
        tblReport.setSelectionBackground(new java.awt.Color(255, 153, 153));
        tblReport.setShowGrid(true);
        tblReport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblReportMouseClicked(evt);
            }
        });
        srlReport.setViewportView(tblReport);

        cmbReport.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All" }));
        cmbReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbReportActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Report:");

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(srlReport, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(26, 26, 26)
                        .addComponent(cmbReport, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(srlReport, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblReportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReportMouseClicked
        if (evt.getClickCount() == 2 && tblReport.getSelectedRow() != -1) {
            int selectedRow = tblReport.getSelectedRow();
            String id = tblReport.getValueAt(selectedRow, 0).toString();
            String prefix = id.substring(0, 3);
            Report report = Report.getReportById(id);
            switch (prefix) {
                case "PUR":
                    PurchaseReportViewer prv = new PurchaseReportViewer(this, true, report);
                    prv.setLocationRelativeTo(this);
                    prv.setVisible(true);
                    break;
                case "STK":
                    StockReportViewer srv = new StockReportViewer(this, true, report);
                    srv.setLocationRelativeTo(this);
                    srv.setVisible(true);
                    break;
                case "SUP":
                    StockUpdateReportViewer surv = new StockUpdateReportViewer(this, true, report);
                    surv.setLocationRelativeTo(this);
                    surv.setVisible(true);
                    break;
            }
        }
    }//GEN-LAST:event_tblReportMouseClicked

    private void cmbReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbReportActionPerformed
        Report();
    }//GEN-LAST:event_cmbReportActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbReport;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JScrollPane srlReport;
    private javax.swing.JTable tblReport;
    // End of variables declaration//GEN-END:variables
}
