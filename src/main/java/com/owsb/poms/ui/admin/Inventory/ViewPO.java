package com.owsb.poms.ui.admin.Inventory;

import com.owsb.poms.system.model.*;
import javax.swing.SwingConstants;
import javax.swing.table.*;

public class ViewPO extends javax.swing.JDialog {
    private boolean isFilling;
    private PurchaseOrder po;
    private DefaultTableModel itemsModel = new DefaultTableModel(){
                public boolean isCellEditable(int row, int column){
                    return false;
                } 
            } ;
    private String[] itemsColumnName = {"ID", "Category", "Type", "Name", "Quantity"};

    
    public ViewPO(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setTitle("Purchase Order");
        
        itemsModel.setColumnIdentifiers(itemsColumnName);
        JTableHeader header = tblItems.getTableHeader();
        header.setBackground(new java.awt.Color(255, 255, 204));
        
        srlItems.getViewport().setBackground(new java.awt.Color(255, 255, 204));
        
        tblItems.getColumnModel().getColumn(0).setPreferredWidth(80);
        tblItems.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblItems.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblItems.getColumnModel().getColumn(3).setPreferredWidth(200);
        
        isFilling = true;
        var list = PurchaseOrder.toList();
        for (PurchaseOrder order : list){
            if (order.getStatus() == PurchaseOrder.Status.ARRIVED){
                cmbPO.addItem(order.getPOID());
            }
        }
        cmbPO.setSelectedIndex(-1);
        isFilling = false;
    }

    private void refresh(){
        itemsModel.setRowCount(0);
        
        var items = po.getItems();
        
        for (POItem item : items) {
            itemsModel.addRow(new String[]{
                item.getItemID(),
                item.getItemCategory(),
                item.getItemType(),
                item.getItemName(),
                String.valueOf(item.getQuantity())
            });
        }
        
        // Create a single “center” renderer:
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        // Apply it as the default for any Object‐typed cell:
        tblItems.setDefaultRenderer(Object.class, centerRenderer);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbPO = new javax.swing.JComboBox<>();
        srlItems = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(255, 204, 204));

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("POID:");

        cmbPO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPOActionPerformed(evt);
            }
        });

        srlItems.setPreferredSize(new java.awt.Dimension(517, 230));

        tblItems.setBackground(new java.awt.Color(255, 255, 204));
        tblItems.setModel(itemsModel);
        tblItems.setGridColor(java.awt.Color.gray);
        tblItems.setRowSelectionAllowed(false);
        tblItems.setSelectionBackground(new java.awt.Color(255, 153, 153));
        tblItems.setShowGrid(true);
        srlItems.setViewportView(tblItems);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(cmbPO, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(srlItems, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbPO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(srlItems, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPOActionPerformed
        if (isFilling) return;
        po = PurchaseOrder.getPoById(cmbPO.getSelectedItem().toString());
        setTitle(po.getPOID());
        refresh();
    }//GEN-LAST:event_cmbPOActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbPO;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JScrollPane srlItems;
    private javax.swing.JTable tblItems;
    // End of variables declaration//GEN-END:variables
}
